<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!-- Ant build file (http://ant.apache.org/) for Ant 1.6.2 or above.        -->
<!-- ====================================================================== -->

<!-- ====================================================================== -->
<!-- ===================== - DO NOT EDIT THIS FILE! - ===================== -->
<!-- ====================================================================== -->
<!--                                                                        -->
<!-- Any modifications will be overwritten.                                 -->
<!--                                                                        -->
<!-- Generated by Maven Ant Plugin on 6/8/21 11:47 PM                       -->
<!-- See: http://maven.apache.org/plugins/maven-ant-plugin/                 -->
<!--                                                                        -->
<!-- ====================================================================== -->

<project name="commons-validator-from-maven" default="package" basedir="." xmlns:if="ant:if" xmlns:unless="ant:unless">

  <!-- ====================================================================== -->
  <!-- Build environment properties                                           -->
  <!-- ====================================================================== -->

  <property file="${user.home}/.m2/maven.properties"/>
  <property file="maven-build.properties"/>

  <property name="maven.build.finalName" value="commons-validator-1.3.1-SNAPSHOT"/>
  <property name="maven.build.dir" value="target"/>
  <property name="maven.build.outputDir" value="${maven.build.dir}/classes"/>
  <property name="maven.build.srcDir.0" value="src/share"/>
  <property name="maven.build.resourceDir.0" value="."/>
  <property name="maven.build.testOutputDir" value="${maven.build.dir}/test-classes"/>
  <property name="maven.build.testDir.0" value="src/test"/>
  <property name="maven.build.testResourceDir.0" value="src/test"/>
  <property name="maven.test.reports" value="${maven.build.dir}/test-reports"/>
  <property name="maven.reporting.outputDirectory" value="${maven.build.dir}/site"/>
  <property name="maven.repo.local" value="${user.home}/.m2/repository"/>
  <property name="maven.settings.offline" value="false"/>
  <property name="maven.settings.interactiveMode" value="true"/>
  
  <!-- ====================================================================== -->
  <!-- Defining classpaths                                                    -->
  <!-- ====================================================================== -->

  <path id="build.classpath">
    <pathelement location="${maven.repo.local}/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar"/>
    <pathelement location="${maven.repo.local}/commons-digester/commons-digester/1.6/commons-digester-1.6.jar"/>
    <pathelement location="${maven.repo.local}/commons-collections/commons-collections/2.1/commons-collections-2.1.jar"/>
    <pathelement location="${maven.repo.local}/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar"/>
    <pathelement location="${maven.repo.local}/oro/oro/2.0.8/oro-2.0.8.jar"/>
    <pathelement location="${maven.repo.local}/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar"/>
  </path>
  <path id="build.test.classpath">
    <pathelement location="${maven.repo.local}/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar"/>
    <pathelement location="${maven.repo.local}/commons-digester/commons-digester/1.6/commons-digester-1.6.jar"/>
    <pathelement location="${maven.repo.local}/commons-collections/commons-collections/2.1/commons-collections-2.1.jar"/>
    <pathelement location="${maven.repo.local}/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar"/>
    <pathelement location="${maven.repo.local}/oro/oro/2.0.8/oro-2.0.8.jar"/>
    <pathelement location="${maven.repo.local}/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar"/>
    <pathelement location="${maven.repo.local}/junit/junit/3.8.1/junit-3.8.1.jar"/>
  </path>

  <target name="print-classpath">
     <echo>${toString:build.classpath}</echo>
  </target>

  <target name="print-test.classpath">
     <echo>${toString:build.test.classpath}</echo>
  </target>

  <!-- ====================================================================== -->
  <!-- Cleaning up target                                                     -->
  <!-- ====================================================================== -->

  <target name="clean" description="Clean the output directory">
    <delete dir="${maven.build.dir}"/>
    <delete dir="${dir.classes.testgen}"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Compilation target                                                     -->
  <!-- ====================================================================== -->

  <target name="compile" depends="get-deps" description="Compile the code">
    <mkdir dir="${maven.build.outputDir}"/>
    <javac destdir="${maven.build.outputDir}" 
           encoding="UTF-8"
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           target="1.3" 
           verbose="false" 
           fork="false" 
           source="1.3">
      <src>
        <pathelement location="${maven.build.srcDir.0}"/>
      </src>
      <classpath refid="build.classpath"/>
    </javac>
    <mkdir dir="${maven.build.outputDir}/META-INF"/>
    <copy todir="${maven.build.outputDir}/META-INF">
      <fileset dir="${maven.build.resourceDir.0}">
        <include name="NOTICE.txt"/>
      </fileset>
    </copy>
    <copy todir="${maven.build.outputDir}">
      <fileset dir="${maven.build.srcDir.0}" includes="**/*.xml"/>
    </copy>
  </target>

  <!-- ====================================================================== -->
  <!-- Test-compilation target                                                -->
  <!-- ====================================================================== -->

  <target name="compile-tests" 
          depends="compile" 
          description="Compile the test code" 
          unless="maven.test.skip">
    <mkdir dir="${maven.build.testOutputDir}"/>
    <javac destdir="${maven.build.testOutputDir}" 
           nowarn="false" 
           debug="true" 
           optimize="false" 
           deprecation="true" 
           target="1.3" 
           verbose="false" 
           fork="false" 
           source="1.3">
      <src>
        <pathelement location="${maven.build.testDir.0}"/>
      </src>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
      </classpath>
    </javac>
     <copy todir="${maven.build.testOutputDir}">
      <fileset dir="${maven.build.testResourceDir.0}" includes="**/*.xml"/>
    </copy>
  </target>

  <target name="compile-gen-tests" depends="compile, compile-tests" description="Compile generated tests">
    <delete dir="${dir.classes.testgen}" quiet="true" />
    <mkdir dir="${dir.classes.testgen}"/>
    <javac srcdir="${test.dir}" 
           destdir="${dir.classes.testgen}"
           debug="true"
           deprecation="false"
           optimize="false">
      <classpath>
        <path refid="build.test.classpath"/>
        <path refid="lib.testgen.rt"/>
        <pathelement path="${junit.jar}"/>
        <pathelement path="${maven.build.outputDir}"/>
        <pathelement path="${maven.build.testOutputDir}"/>
      </classpath>
    </javac>
  </target>

  <!-- ====================================================================== -->
  <!-- Run all tests                                                          -->
  <!-- ====================================================================== -->

  <target name="test" 
          depends="compile-tests, junit-missing" 
          unless="junit.skipped" 
          description="Run the test cases">
    <mkdir dir="${maven.test.reports}"/>
    <loadfile srcfile="${test.relevant}"
              property="rel.files"
              if:set="test.relevant">
      <filterchain>
        <tokenfilter>
          <replaceregex pattern="\." replace="/" flags="g"/>
        </tokenfilter>
        <suffixlines suffix=".*,"/>
        <striplinebreaks/>
      </filterchain>
    </loadfile>
    <condition property="test.all">
      <and>
        <not>  
          <isset property="test.entry.class"/>
        </not>
        <not>
          <isset property="test.relevant"/>
        </not>
      </and>
    </condition>
    <junit printSummary="yes" haltonerror="false" haltonfailure="false" fork="true" dir=".">
      <jvmarg value="-verbose:class" if:true="${test.monitor}"/>
      <sysproperty key="basedir" value="."/>
      <formatter type="xml"/>
      <formatter type="plain" usefile="false"/>
      <classpath>
        <path refid="build.test.classpath"/>
        <pathelement location="${maven.build.outputDir}"/>
        <pathelement location="${maven.build.testOutputDir}"/>
      </classpath>
      <test name="${test.entry.class}" methods="${test.entry.method}" if="test.entry.class" />
      <batchtest todir="${maven.test.reports}" if="test.relevant">
        <fileset dir="${maven.build.testDir.0}" includes="${rel.files}"/>
      </batchtest>
      <batchtest todir="${maven.test.reports}" if="test.all">
        <fileset dir="${maven.build.testDir.0}">
          <include name="**/*Test.java"/>
          <exclude name="**/routines/BaseCalendarValidatorTest.java"/>
          <exclude name="**/routines/BaseNumberValidatorTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="run-gen-tests"  depends="compile-gen-tests" description="Run generated tests">
    <mkdir dir="${maven.test.reports}"/>
    <junit printsummary="yes" haltonfailure="no" haltonerror="no" fork="yes" forkmode="perBatch" showOutput="true">
      <formatter type="xml"/>
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement path="${dir.classes.testgen}" />
        <pathelement path="${junit.jar}" />
        <pathelement path="${maven.build.outputDir}" />
        <path refid="build.test.classpath"/>
        <path refid="lib.testgen.rt"/>
      </classpath>
      <test name="${test.entry.class}" methods="${test.entry.method}" if="test.entry.class" />
      <batchtest todir="${maven.test.reports}" unless="test.entry.class">
        <fileset dir="${test.dir}">
          <include name="**/*.java"/>
          <exclude name="**/*_scaffolding.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="test-junit-present">
    <available classname="junit.framework.Test" property="junit.present" classpathref="build.test.classpath"/>
  </target>

  <target name="test-junit-status" 
          depends="test-junit-present">
    <condition property="junit.missing">
      <and>
        <isfalse value="${junit.present}"/>
        <isfalse value="${maven.test.skip}"/>
      </and>
    </condition>
    <condition property="junit.skipped">
      <or>
        <isfalse value="${junit.present}"/>
        <istrue value="${maven.test.skip}"/>
      </or>
    </condition>
  </target>

  <target name="junit-missing" 
          depends="test-junit-status" 
          if="junit.missing">
    <echo>=================================== WARNING ===================================</echo>
    <echo> JUnit is not present in the test classpath or your $ANT_HOME/lib directory. Tests not executed.</echo>
    <echo>===============================================================================</echo>
  </target>

  <!-- ====================================================================== -->
  <!-- Javadoc target                                                         -->
  <!-- ====================================================================== -->

  <target name="javadoc" description="Generates the Javadoc of the application">
    <javadoc sourcepath="${maven.build.srcDir.0}" 
             packagenames="*" 
             destdir="${maven.reporting.outputDirectory}/apidocs" 
             access="protected" 
             old="false" 
             verbose="false" 
             version="true" 
             use="true" 
             author="true" 
             splitindex="false" 
             nodeprecated="false" 
             nodeprecatedlist="false" 
             notree="false" 
             noindex="false" 
             nohelp="false" 
             nonavbar="false" 
             serialwarn="false" 
             charset="ISO-8859-1" 
             linksource="false" 
             breakiterator="false"/>
  </target>

  <!-- ====================================================================== -->
  <!-- Package target                                                         -->
  <!-- ====================================================================== -->

  <target name="package" depends="compile,test" description="Package the application">
    <jar jarfile="${maven.build.dir}/${maven.build.finalName}.jar" 
         compress="true" 
         index="false" 
         basedir="${maven.build.outputDir}" 
         excludes="**/package.html"/>
  </target>

  <!-- ====================================================================== -->
  <!-- A dummy target for the package named after the type it creates         -->
  <!-- ====================================================================== -->

  <target name="jar" depends="package" description="Builds the jar for the application"/>

  <!-- ====================================================================== -->
  <!-- Download dependencies target                                           -->
  <!-- ====================================================================== -->

  <target name="test-offline">
    <condition property="maven.mode.offline">
      <equals arg1="${maven.settings.offline}" arg2="true"/>
    </condition>
  </target>

  <target name="get-deps" 
          depends="test-offline" 
          description="Download all dependencies" 
          unless="maven.mode.offline">
    <mkdir dir="${maven.repo.local}"/>
    <mkdir dir="${maven.repo.local}/commons-beanutils/commons-beanutils/1.7.0"/>
    <get src="https://repo.maven.apache.org/maven2/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar" 
         dest="${maven.repo.local}/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/commons-digester/commons-digester/1.6"/>
    <get src="https://repo.maven.apache.org/maven2/commons-digester/commons-digester/1.6/commons-digester-1.6.jar" 
         dest="${maven.repo.local}/commons-digester/commons-digester/1.6/commons-digester-1.6.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/commons-collections/commons-collections/2.1"/>
    <get src="https://repo.maven.apache.org/maven2/commons-collections/commons-collections/2.1/commons-collections-2.1.jar" 
         dest="${maven.repo.local}/commons-collections/commons-collections/2.1/commons-collections-2.1.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/commons-logging/commons-logging/1.0.4"/>
    <get src="https://repo.maven.apache.org/maven2/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar" 
         dest="${maven.repo.local}/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/oro/oro/2.0.8"/>
    <get src="https://repo.maven.apache.org/maven2/oro/oro/2.0.8/oro-2.0.8.jar" 
         dest="${maven.repo.local}/oro/oro/2.0.8/oro-2.0.8.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/xml-apis/xml-apis/1.0.b2"/>
    <get src="https://repo.maven.apache.org/maven2/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar" 
         dest="${maven.repo.local}/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
    <mkdir dir="${maven.repo.local}/junit/junit/3.8.1"/>
    <get src="https://repo.maven.apache.org/maven2/junit/junit/3.8.1/junit-3.8.1.jar" 
         dest="${maven.repo.local}/junit/junit/3.8.1/junit-3.8.1.jar" 
         usetimestamp="false" 
         ignoreerrors="true"/>
  </target>

</project>
